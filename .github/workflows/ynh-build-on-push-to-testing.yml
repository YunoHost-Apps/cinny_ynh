name: ynh-build-on-push-to-testing

on:
  push:
    branches: [ "testing" ]
    
jobs: 
  ynh-app-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Build release
        id: build_release
        run: | 
          chmod +x scripts/build
          ./scripts/build
          
      - name: Prepare draft release
        id: draft_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.build_release.outputs.YNH_RELEASE_FILE }}
          fail_on_unmatched_files: true
          tag_name: ${{ steps.build_release.outputs.YNH_RELEASE_VERSION }}
          draft: true
          prerelease: false
          make_latest: true
          body: |
            Version prebuilt for Yunohost using `scripts/build` and `.github/workflows/ynh-build-on-push-to-testing.yml` in order to ensure sub-directory install compatibility and avoid build step on less powerful machines.
            ### Changelog
            Cf. upstream release note: ${{ steps.diff_url.outputs.YNH_RELEASE_DIFF_COMPARE_URL }}

      - name: Replace URL & SHA256 in manifest.toml
        run: |
          sed -i '/\[resources.sources.ynh_build\]/,/sha256/ {
              /url/s|=.*$|= "${{ steps.build_release.outputs.YNH_RELEASE_URL }}"|
              /sha256/s|=.*$|= "${{ steps.build_release.outputs.YNH_RELEASE_SHA }}"|
          }' manifest.toml

      - name: Commit changes to manifest.toml
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'Update release in manifest'
          add: 'manifest.toml'

      - name: Create pull request or update existing one
        run: |
          CURRENT_BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          PR_URL="$(gh pr list --head ${CURRENT_BRANCH_NAME} --state open --json url --jq .[].url)"
          PR_BODY="Upstream upgrade is now built for YNH and ready to be released in the current repository: ${{ steps.draft_release.outputs.url }}\n
          - [ ] Make sure the release is published before testing this PR.\n
          "
          if [[ -n "${PR_URL}" ]]; then
            OLD_PR_BODY="$(gh pr view $PR_URL --json body --jq .body)"
            if [[ -n "${OLD_PR_BODY}" ]]; then
                # Append new body to old body if the latter is not empty
                PR_BODY="${OLD_PR_BODY}\n\n---\n${PR_BODY}"
            fi
            echo "Editing already existing PR for the current branch -> ${PR_URL}"
            echo -e $PR_BODY | gh pr edit --title 'Update to ${{ steps.build_release.outputs.YNH_RELEASE_VERSION }}' --body-file -
            exit 0
          else
            echo -e $PR_BODY | gh pr create --base master --head ${CURRENT_BRANCH_NAME} --title 'Update to ${{ steps.build_release.outputs.YNH_RELEASE_VERSION }}' --body-file -
          fi 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
